from collections import deque
 
dx = [-1, 0, 1, 1, 1, 0, -1, -1]
dy = [-1, -1, -1, 0, 1, 1, 1, 0]
 
def BFS(x, y):
    Q = deque()
    Q.append((x, y))
    visit[x][y] = True
    while len(Q):
        x, y = Q.popleft()
        for i in range(8):
            tx, ty = x + dx[i], y + dy[i]
            if tx < 0 or tx == N or ty < 0 or ty == N or visit[tx][ty]: continue
            visit[tx][ty] = True
            if cnt[tx][ty] == 0:
                Q.append((tx, ty))
 
T = int(input())
for tc in range(1, T + 1):
    N = int(input())
    MAP = [input() for _ in range(N)]
 
    cnt = [[0] * N for _ in range(N)]
    visit = [[False] * N for _ in range(N)]
    Q = deque()
    for x in range(N):
        for y in range(N):
            if MAP[x][y] == '*':
                cnt[x][y] = -1
                continue
            for i in range(8):
                tx, ty = x + dx[i], y + dy[i]
                if tx < 0 or tx == N or ty < 0 or ty == N: continue
                if MAP[tx][ty] == '*':
                    cnt[x][y] += 1
            if cnt[x][y] == 0:
                Q.append((x, y))
    ans = x = y = 0
    while len(Q):
        x, y = Q.popleft()
        if visit[x][y]: continue
        ans += 1
        BFS(x, y)
    for x in range(N):
        for y in range(N):
            if MAP[x][y] != '*' and not visit[x][y]:
                ans += 1
    print('#%d %d' % (tc, ans))