import sys

def dfs():
    visited = {i:0 for i in range(V+1)}
    stack = []
    stack.append(start)
    while(len(stack)!=0):
        n = stack.pop()             # 방문할 노드를 스택에서 꺼냄
        visited[n] = 1              # 현재 위치 n에 방문 표시
        if n == end:
            return 1
        for t in adj[n]:            # n의 인접 노드중
            if visited[t] == 0:     # 방문안한 노드를 스택에 추가
                stack.append(t)
                n = t
    return 0

sys.stdin = open('input.txt', 'r')
T = int(input())
for tc in range(1, T+1):
    V, E = map(int, input().split())
    adj = {i:[] for i in range(1,V+1)}
    for i in range (E):
        n1, n2 = map(int, input().split())
        adj[n1].append(n2)
    start, end = map(int, input().split())
    print('#{} {}'.format(tc, dfs()))
